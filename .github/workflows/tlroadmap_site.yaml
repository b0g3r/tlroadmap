name: Publish site

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  generate-roadmap-plantuml:
    name: Generate roadmap.puml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # TODO: temporary mock

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: plantuml
          path: roadmap.puml


  generate-roadmap-freemind:
    name: Generate roadmap.mm
    runs-on: ubuntu-latest
    needs:
      - generate-roadmap-plantuml
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          name: plantuml

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tools/requirements.txt

      - name: Run plantuml2freemind
        run: plantuml2freemind convert plantuml/roadmap.puml roadmap.mm --no-interaction

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: freemind
          path: roadmap.mm

  generate-roadmap-image:
    name: Generate roadmap.svg, roadmap.png
    runs-on: ubuntu-latest
    needs:
      - generate-roadmap-plantuml
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          name: plantuml

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Generate .png and .svg
        run: |
          mkdir images
          cat plantuml/roadmap.puml | java -jar tools/plantuml.jar -charset UTF-8 -pipe > images/roadmap.png
          cat plantuml/roadmap.puml | java -jar tools/plantuml.jar -charset UTF-8 -tsvg -pipe > images/roadmap.svg

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: images
          path: images

  build-vuepress:
    name: Build VuePress site
    runs-on: ubuntu-latest
    needs:
      - generate-roadmap-image
      - generate-roadmap-plantuml
      - generate-roadmap-freemind
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          name: images

      - uses: actions/download-artifact@v1
        with:
          name: freemind

      - uses: actions/download-artifact@v1
        with:
          name: plantuml

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '13.x'

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Prepare roadmap outputs
        run: |
          mv images/roadmap.png tlroadmap/.vuepress/public/
          mv images/roadmap.svg tlroadmap/.vuepress/public/
          mv plantuml/roadmap.puml tlroadmap/.vuepress/public/
          mv freemind/roadmap.mm tlroadmap/.vuepress/public/

      - name: Install js dependencies
        run: yarn install --frozen-lockfile

      - name: Build vuepress site
        run: yarn run site:build

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: vuepress-site
          path: tlroadmap/.vuepress/dist

  check-links:
    name: Check broken links
    runs-on: ubuntu-latest
    needs:
      - build-vuepress
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: vuepress-site

      - name: Check links
        uses: chabad360/htmlproofer@master
        with:
          directory: vuepress-site
          arguments: >-
            --assume-extension
            --typhoeus-config '{"timeout": 60}'
            --url-ignore "/www\.consultant\.ru/.*/,/github.com\/.*\/edit\/.*/"

  publish-vuepress:
    name: Publish VuePress site
    runs-on: ubuntu-latest
    needs:
      - build-vuepress
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: vuepress-site

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '13.x'

      - name: Publish to netlify [prod]
        id: publish-prod
        if: github.ref == 'refs/heads/master'
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        # If auto-publishing is on then right after deploying site address
        # will be changed to main address:
        # preview-abcde--subdomain.example.com -> subdomain.example.com
        # Unfortunately, netlify-cms returns draft address :(
        run: |
          draft_url=$(npx netlify-cli deploy --json --dir=vuepress-site --prod | jq -r .deploy_url)
          deploy_host=$(echo $draft_url | awk -F'--' '{print $NF}')
          echo "::set-output name=deploy-url::https://$deploy_host"

      - name: Publish to netlify [preview]
        id: publish-preview
        if: github.event_name == 'pull_request'
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          deploy_url=$(npx netlify-cli deploy --json --dir=vuepress-site | jq -r .deploy_url)
          echo "::set-output name=deploy-url::$deploy_url"

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v1.2.0
        with:
          token: "${{ github.token }}"
          environment: "${{ (github.event_name == 'pull_request' && 'review') || 'prod' }}"
          ref: "${{ github.head_ref || 'master' }}"
          target_url: "${{ steps.publish-preview.outputs.deploy-url || steps.publish-prod.outputs.deploy-url }}"
          initial_status: success
